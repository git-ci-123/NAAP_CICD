name: Liquibase Migration
 
on:
  workflow_dispatch:
    inputs:
      base_path:
        description: "Base path in releasemanagement branch (e.g., Release/2305)"
        required: true
        type: string

env:
  TARGET_REPO: "git-ci-123/NAAP_PROJECT"
  PROPERTIES_BRANCH: "dev-properties"
  RELEASE_BRANCH: "releasemanagement"
  MANIFEST_BRANCH: "dev-manifest"
  SCRIPT_BRANCH: "dev-script"

jobs:
  liquibase-migration:
    runs-on: naap
    steps:
      - name: Checkout CICD Repository 
        uses: actions/checkout@v4

      - name: Checkout Release Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          token: ${{ secrets.PAT_TOKEN }}    
          ref: ${{ env.RELEASE_BRANCH }}
          path: 'NAAP_Release' 

      - name: Validate Base Path in Releasemanagement Branch
        run: |
          BASE_PATH="${{ github.event.inputs.base_path }}"
          if [ ! -d NAAP_Release/"$BASE_PATH" ]; then
            echo "‚ùå Error: Base path $BASE_PATH not found!"
            exit 1
          fi
          echo "BASE_PATH=NAAP_Release/$BASE_PATH" >> $GITHUB_ENV
          echo "‚úÖ Base path NAAP_Release/$BASE_PATH found."

      - name: Extract Release Folder from [DB] in input.txt
        id: read_input
        run: |
          RELEASE_FOLDER=$(sed -n '/^\[DB\]/ {n; p;}' "$BASE_PATH/input.txt" | tr -d '\r')
          if [ -z "$RELEASE_FOLDER" ]; then
            echo "‚ùå Error: Could not extract release folder!"
            exit 1
          fi
          echo "RELEASE_FOLDER=$RELEASE_FOLDER" >> $GITHUB_ENV
          echo "‚úÖ Extracted release folder: $RELEASE_FOLDER."

      - name: Checkout DB Scripts (db-scripts branch)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          token: ${{ secrets.PAT_TOKEN }}    
          ref: ${{ env.SCRIPT_BRANCH }}
          path: 'NAAP_DB'

      - name: Validate Release Folder in DB Scripts Branch
        run: |
          DB_SCRIPTS_PATH="NAAP_DB/$RELEASE_FOLDER"
          if [ ! -d "$DB_SCRIPTS_PATH" ]; then
            echo "‚ùå Error: Release folder $RELEASE_FOLDER not found in db-scripts branch!"
            exit 1
          fi
          echo "‚úÖ Release folder $RELEASE_FOLDER found in db-scripts branch."

      - name: Install Liquibase (if not installed)
        run: |
          if ! command -v liquibase &> /dev/null; then
            echo "üîÑ Installing Liquibase..."
            curl -sSLo liquibase.tar.gz https://github.com/liquibase/liquibase/releases/latest/download/liquibase-4.31.1.tar.gz
            tar -xzf liquibase.tar.gz
            sudo mv liquibase /usr/local/bin/
            echo "‚úÖ Liquibase installed."
          else
            echo "‚úÖ Liquibase is already installed."
          fi

      - name: Run Liquibase Migration
        env:
          LIQUIBASE_COMMAND_URL: ${{ secrets.DB_DEV_URL }}
          DB_USER_APPCATALOG: ${{ secrets.APPCATALOG_DEV_USER }}
          DB_PASSWORD_APPCATALOG: ${{ secrets.APPCATALOG_DEV_PASSWD }}
        run: |
          CHANGELOG_FILE="NAAP_DB/$RELEASE_FOLDER/08_APPCATALOG/APPCATALOG-changelog.xml"
          
          if [ ! -f "$CHANGELOG_FILE" ]; then
            echo "‚ùå Error: Changelog file $CHANGELOG_FILE not found!"
            exit 1
          fi

          echo "üöÄ Running Liquibase for APPCATALOG..."
          liquibase --url="$LIQUIBASE_COMMAND_URL" \
                    --username="$DB_USER_APPCATALOG" \
                    --password="$DB_PASSWORD_APPCATALOG" \
                    --changeLogFile="$CHANGELOG_FILE" update
