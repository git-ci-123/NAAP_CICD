name: Liquibase Migration
 
on:

  workflow_dispatch:

    inputs:

      base_path:

        description: "Base path in releasemanagement branch (e.g., Release/2305)"

        required: true

        type: string
 
jobs:

  liquibase-migration:

    runs-on: ubuntu-latest
 
    steps:

      - name: Checkout CICD Repository (releasemanagement branch)

        uses: actions/checkout@v4

        with:

          ref: releasemanagement  
 
      - name: Validate Base Path in Releasemanagement Branch

        run: |

          BASE_PATH="${{ github.event.inputs.base_path }}"

          if [ ! -d "$BASE_PATH" ]; then

            echo "‚ùå Error: Base path $BASE_PATH not found!"

            exit 1

          fi

          echo "BASE_PATH=$BASE_PATH" >> $GITHUB_ENV

          echo "‚úÖ Base path $BASE_PATH found."
 
      - name: Extract Release Folder from [DB] in input.txt

        id: read_input

        run: |

          RELEASE_FOLDER=$(sed -n '/^\[DB\]/ {n; p;}' "$BASE_PATH/input.txt" | tr -d '\r')

          if [ -z "$RELEASE_FOLDER" ]; then

            echo "‚ùå Error: Could not extract release folder!"

            exit 1

          fi

          echo "RELEASE_FOLDER=$RELEASE_FOLDER" >> $GITHUB_ENV

          echo "‚úÖ Extracted release folder: $RELEASE_FOLDER."
 
      - name: Validate Release Folder in Releasemanagement Branch

        run: |

          if [ ! -d "$BASE_PATH/$RELEASE_FOLDER" ]; then

            echo "‚ùå Error: Release folder $RELEASE_FOLDER not found in $BASE_PATH!"

            exit 1

          fi

          echo "‚úÖ Release folder $RELEASE_FOLDER found."
 
      - name: Checkout DB Scripts (db-scripts branch)

        uses: actions/checkout@v4

        with:

          ref: db-scripts

          path: db-scripts  
 
      - name: Validate Release Folder in DB Scripts Branch

        run: |

          DB_SCRIPTS_PATH="db-scripts/dev-scripts/$RELEASE_FOLDER"

          if [ ! -d "$DB_SCRIPTS_PATH" ]; then

            echo "‚ùå Error: Release folder $RELEASE_FOLDER not found in db-scripts branch!"

            exit 1

          fi

          echo "‚úÖ Release folder $RELEASE_FOLDER found in db-scripts branch."
 
      - name: Set up Java

        uses: actions/setup-java@v3

        with:

          distribution: 'temurin'

          java-version: '17'
 
      - name: Install Liquibase

        run: |

          curl -LO https://github.com/liquibase/liquibase/releases/download/v4.23.2/liquibase-4.23.2.tar.gz

          tar -xvzf liquibase-4.23.2.tar.gz

          chmod +x liquibase

          sudo mv liquibase /usr/local/bin/

          echo "‚úÖ Liquibase installed."
 
      - name: Execute Liquibase Scripts for Multiple Schemas

        env:

          LIQUIBASE_COMMAND_URL: ${{ secrets.DB_URL }}

        run: |

          RELEASE_PATH="db-scripts/dev-scripts/$RELEASE_FOLDER"

          echo "üöÄ Processing release: $RELEASE_FOLDER"

          find "$RELEASE_PATH" -maxdepth 1 -mindepth 1 -type d | sort | while read -r schema_folder; do

            SCHEMA_FULL_NAME=$(basename "$schema_folder")

            SCHEMA_NAME=$(echo "$SCHEMA_FULL_NAME" | cut -d'_' -f2) 

            SCHEMA_USER_VAR="DB_USER_${SCHEMA_NAME}"

            SCHEMA_PASS_VAR="DB_PASSWORD_${SCHEMA_NAME}"
 
            SCHEMA_USER="${!SCHEMA_USER_VAR}"

            SCHEMA_PASS="${!SCHEMA_PASS_VAR}"
 
            if [ -z "$SCHEMA_USER" ] || [ -z "$SCHEMA_PASS" ]; then

              echo "‚ùå Error: Missing credentials for schema $SCHEMA_NAME!"

              exit 1

            fi
 
            echo "üìÇ Running scripts for schema: $SCHEMA_NAME"
 
            find "$schema_folder" -type d | sort | while read -r subfolder; do

              echo "üìÅ Executing in: $subfolder"

              find "$subfolder" -type f -name "*.sql" | sort | while read -r script; do

                echo "üìù Running $script"

                if ! liquibase --url="$LIQUIBASE_COMMAND_URL" --username="$SCHEMA_USER" --password="$SCHEMA_PASS" \

                  --changeLogFile="$script" update; then

                  echo "‚ùå Error running $script for $SCHEMA_NAME!"

                  exit 1

                fi

              done

            done

          done
