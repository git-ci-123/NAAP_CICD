name: Cleanslate Execution

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Release Path"
        required: true
        type: string

jobs:
  checkout:
    runs-on: naap
    outputs:
      iteration: ${{ steps.extract.outputs.ITERATION }}
      imagetag: ${{ steps.extract.outputs.IMAGETAG }}
      db: ${{ steps.extract.outputs.DB }}
      property: ${{ steps.check_properties.outputs.property }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Checkout Project Repository
        uses: actions/checkout@v2
        with:
          repository: 'git-ci-123/NAAP_PROJECT'
          token: ${{ secrets.GITHUB_TOKEN }}    
          ref: releasemanagement
          path: 'NAAP_Release'

      - name: Read Inputs from File
        id: extract
        run: |
          ls -ltr
          RELEASE_VERSION=${{ inputs.release }}
          FILE_PATH="NAAP_Release/${RELEASE_VERSION}/input.txt"

          if [ ! -f "$FILE_PATH" ]; then
            echo "File not found: $FILE_PATH"
            exit 1
          fi

          ITERATION=$(awk '/\[ITERATION\]/{getline; print}' $FILE_PATH | tr -d '[:space:]')
          IMAGETAG=$(awk '/\[IMAGETAG\]/ {flag=1; next} /\[DB\]/ {flag=0} flag' $FILE_PATH | tr '\n' ',' | sed 's/,$//')
          DB=$(awk '/\[DB\]/{getline; print}' $FILE_PATH | tr -d '[:space:]')

          echo "ITERATION=$ITERATION"
          echo "IMAGETAG=$IMAGETAG"
          echo "DB=$DB"

          echo "ITERATION=$ITERATION" >> $GITHUB_OUTPUT
          echo "IMAGETAG=$IMAGETAG" >> $GITHUB_OUTPUT
          echo "DB=$DB" >> $GITHUB_OUTPUT
          
      - name: Check for properties Files
        id: check_properties
        run: |
          PROP_FILES=$(find NAAP_Release/${{ inputs.release }} -type f -name "*.properties" | wc -l)

          if [ "$PROP_FILES" -gt 0 ]; then
            echo "Properties files found: $PROP_FILES"
            echo "property=true" >> $GITHUB_OUTPUT
          else
            echo "No properties files found"
            echo "property=" >> $GITHUB_OUTPUT
          fi

  DB_Execution:
    needs: checkout
    runs-on: naap
    if: ${{ needs.checkout.outputs.db != '' }}
    steps:
      - name: Check RDS Instance Connection
        run: |
          sudo apt-get update && sudo apt-get install -y telnet
          if telnet naapdev.cric42eckumc.us-east-2.rds.amazonaws.com 1521; then
            echo "Connection successful!"
          else
            echo "Connection failed!"
            exit 1
          fi

  Property_deployment:
    needs: DB_Execution
    runs-on: naap
    if: ${{ needs.checkout.outputs.property == 'true' }}
    steps:
      - name: Deploy Properties Files
        run: |
          echo "Deploying properties files..."
